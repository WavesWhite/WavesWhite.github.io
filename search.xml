<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[PICtest]]></title>
      <url>/2022/07/07/PICtest/</url>
      <content type="html"><![CDATA[<p><img src="/.193//../../img/posts_img/PICtest/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%BC%9ALogo.jpg" alt="testPIC"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[这是测试代码高亮的]]></title>
      <url>/2022/07/05/test3_code/</url>
      <content type="html"><![CDATA[<ul>
<li>不用管我<ul>
<li>也不用管我<ul>
<li>更不用管我</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">in</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">BufferedReader</span> <span class="variable">re</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">StreamTokenizer</span> <span class="variable">st</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StreamTokenizer</span>(re);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">            st.nextToken();</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">int</span>)st.nval;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">            st.nextToken();</span><br><span class="line">            <span class="keyword">return</span> st.nval;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(System.out)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n,m;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span>[] tree;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] num,mark;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">buildTree</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> p)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">            tree[p] = (<span class="type">long</span>)num[l];</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (l+r)/<span class="number">2</span>;</span><br><span class="line">        buildTree(l, mid, p*<span class="number">2</span>);</span><br><span class="line">        buildTree(mid+<span class="number">1</span>, r, p*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">        tree[p] = tree[p*<span class="number">2</span>]+tree[p*<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">push_down</span><span class="params">(<span class="type">int</span> p, <span class="type">int</span> len)</span>&#123;  </span><br><span class="line">        mark[p*<span class="number">2</span>] += mark[p];</span><br><span class="line">        mark[p*<span class="number">2</span>+<span class="number">1</span>] += mark[p];</span><br><span class="line">        tree[p*<span class="number">2</span>] += mark[p] * (len-len/<span class="number">2</span>);</span><br><span class="line">        tree[p*<span class="number">2</span>+<span class="number">1</span>] += mark[p] * (len/<span class="number">2</span>);</span><br><span class="line">        mark[p] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">updata</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> d, <span class="type">int</span> p, <span class="type">int</span> cl, <span class="type">int</span> cr)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(cl&gt;r || cr&lt;l)&#123;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cl&gt;=l &amp;&amp; cr&lt;=r)&#123;</span><br><span class="line">            tree[p] += (cr-cl+<span class="number">1</span>)*d;</span><br><span class="line">            <span class="keyword">if</span>(cr&gt;cl)&#123;</span><br><span class="line">                mark[p] += d;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (cr+cl)/<span class="number">2</span>;</span><br><span class="line">            push_down(p, cr-cl+<span class="number">1</span>);</span><br><span class="line">            updata(l, r, d, p*<span class="number">2</span>, cl, mid);</span><br><span class="line">            updata(l, r, d, p*<span class="number">2</span>+<span class="number">1</span>, mid+<span class="number">1</span>, cr);</span><br><span class="line">            tree[p] = tree[p*<span class="number">2</span>] + tree[p*<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">qurey</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> p, <span class="type">int</span> cl, <span class="type">int</span> cr)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(cl&gt;r || cr&lt;l)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cl&gt;=l &amp;&amp; cr&lt;=r)&#123;</span><br><span class="line">            <span class="keyword">return</span> tree[p];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (cr+cl)/<span class="number">2</span>;</span><br><span class="line">            push_down(p, cr-cl+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> qurey(l, r, p*<span class="number">2</span>, cl, mid) + qurey(l, r, p*<span class="number">2</span>+<span class="number">1</span>, mid+<span class="number">1</span>, cr);     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="comment">// Scanner in = new Scanner(System.in);</span></span><br><span class="line">        n = in.nextInt();</span><br><span class="line">        m = in.nextInt();</span><br><span class="line"></span><br><span class="line">        tree = <span class="keyword">new</span> <span class="title class_">long</span>[<span class="number">300005</span>];</span><br><span class="line">        num = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">300005</span>];</span><br><span class="line">        mark = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">300005</span>];</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= n;++i) num[i] = in.nextInt();</span><br><span class="line"></span><br><span class="line">        buildTree(<span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(m--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(c==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">                updata(x, y, k, <span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">                System.out.println(qurey(x, y, <span class="number">1</span>, <span class="number">1</span>, n));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> this is test </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[这是一个测试文档]]></title>
      <url>/2022/07/05/test/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> code_test </category>
            
        </categories>
        
        
        <tags>
            
            <tag> this is test </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
